{"ast":null,"code":"var _jsxFileName = \"/Users/papigringo/Desktop/MICRO MINT/src/contexts/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\n// Sample transaction data\nconst sampleTransactions = [{\n  id: 1,\n  type: 'send',\n  amount: 25.00,\n  currency: 'USD',\n  recipient: 'Sarah Chen',\n  date: '2h ago',\n  status: 'completed'\n}, {\n  id: 2,\n  type: 'receive',\n  amount: 150.00,\n  currency: 'USD',\n  sender: 'Work Project',\n  date: '1d ago',\n  status: 'completed'\n}, {\n  id: 3,\n  type: 'verify',\n  amount: 2.50,\n  currency: 'MM',\n  description: 'Verification reward',\n  date: '1d ago',\n  status: 'completed'\n}, {\n  id: 4,\n  type: 'send',\n  amount: 50.00,\n  currency: 'EUR',\n  recipient: 'Online Store',\n  date: '3d ago',\n  status: 'completed'\n}, {\n  id: 5,\n  type: 'receive',\n  amount: 75.25,\n  currency: 'USD',\n  sender: 'Client Payment',\n  date: '5d ago',\n  status: 'completed'\n}];\n\n// Sample verification data\nconst sampleVerifications = [{\n  id: 101,\n  amount: 35.00,\n  currency: 'USD',\n  sender: 'Alex Morgan',\n  recipient: 'Wallet #8f92',\n  date: '2m ago',\n  reward: 0.45\n}, {\n  id: 102,\n  amount: 120.00,\n  currency: 'EUR',\n  sender: 'Wallet #3d7f',\n  recipient: 'Global Shop',\n  date: '5m ago',\n  reward: 0.52\n}, {\n  id: 103,\n  amount: 5.50,\n  currency: 'USD',\n  sender: 'Wallet #a12b',\n  recipient: 'Coffee Shop',\n  date: '8m ago',\n  reward: 0.25\n}];\n\n// Provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  // Define state\n  const [balance, setBalance] = useState({\n    USD: 1250.75,\n    EUR: 980.30,\n    MM: 512.45\n  });\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n  const [transactions, setTransactions] = useState(sampleTransactions);\n  const [pendingVerifications, setPendingVerifications] = useState(sampleVerifications);\n  const [user, setUser] = useState({\n    id: 'mm_8f92a6d1b4c7',\n    name: 'Alex Smith',\n    avatar: null,\n    verified: true\n  });\n\n  // Functions to update state\n  const addTransaction = transaction => {\n    const newTransaction = {\n      id: transactions.length + 100,\n      date: 'Just now',\n      status: 'pending',\n      ...transaction\n    };\n    setTransactions([newTransaction, ...transactions]);\n\n    // If it's a send transaction, update balance\n    if (transaction.type === 'send') {\n      setBalance({\n        ...balance,\n        [transaction.currency]: balance[transaction.currency] - transaction.amount\n      });\n    }\n\n    // Simulate transaction completion after 2 seconds\n    setTimeout(() => {\n      setTransactions(current => current.map(tx => tx.id === newTransaction.id ? {\n        ...tx,\n        status: 'completed'\n      } : tx));\n    }, 2000);\n    return newTransaction;\n  };\n  const verifyTransaction = verificationId => {\n    // Remove from pending verifications\n    setPendingVerifications(current => current.filter(v => v.id !== verificationId));\n\n    // Add verification reward to MM balance\n    const verification = pendingVerifications.find(v => v.id === verificationId);\n    if (verification) {\n      // Add to MM balance\n      setBalance({\n        ...balance,\n        MM: balance.MM + verification.reward\n      });\n\n      // Add to transaction history\n      addTransaction({\n        type: 'verify',\n        amount: verification.reward,\n        currency: 'MM',\n        description: 'Verification reward'\n      });\n    }\n  };\n\n  // Value object\n  const value = {\n    balance,\n    selectedCurrency,\n    setSelectedCurrency,\n    transactions,\n    pendingVerifications,\n    user,\n    addTransaction,\n    verifyTransaction\n  };\n\n  // Return provider\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook for using the context\n_s(AppProvider, \"6ZRw9G/IdcKv5ObogiqczjhjO98=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AppContext","sampleTransactions","id","type","amount","currency","recipient","date","status","sender","description","sampleVerifications","reward","AppProvider","children","_s","balance","setBalance","USD","EUR","MM","selectedCurrency","setSelectedCurrency","transactions","setTransactions","pendingVerifications","setPendingVerifications","user","setUser","name","avatar","verified","addTransaction","transaction","newTransaction","length","setTimeout","current","map","tx","verifyTransaction","verificationId","filter","v","verification","find","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/papigringo/Desktop/MICRO MINT/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nconst AppContext = createContext();\n\n// Sample transaction data\nconst sampleTransactions = [\n  { id: 1, type: 'send', amount: 25.00, currency: 'USD', recipient: 'Sarah Chen', date: '2h ago', status: 'completed' },\n  { id: 2, type: 'receive', amount: 150.00, currency: 'USD', sender: 'Work Project', date: '1d ago', status: 'completed' },\n  { id: 3, type: 'verify', amount: 2.50, currency: 'MM', description: 'Verification reward', date: '1d ago', status: 'completed' },\n  { id: 4, type: 'send', amount: 50.00, currency: 'EUR', recipient: 'Online Store', date: '3d ago', status: 'completed' },\n  { id: 5, type: 'receive', amount: 75.25, currency: 'USD', sender: 'Client Payment', date: '5d ago', status: 'completed' }\n];\n\n// Sample verification data\nconst sampleVerifications = [\n  { id: 101, amount: 35.00, currency: 'USD', sender: 'Alex Morgan', recipient: 'Wallet #8f92', date: '2m ago', reward: 0.45 },\n  { id: 102, amount: 120.00, currency: 'EUR', sender: 'Wallet #3d7f', recipient: 'Global Shop', date: '5m ago', reward: 0.52 },\n  { id: 103, amount: 5.50, currency: 'USD', sender: 'Wallet #a12b', recipient: 'Coffee Shop', date: '8m ago', reward: 0.25 }\n];\n\n// Provider component\nexport const AppProvider = ({ children }) => {\n  // Define state\n  const [balance, setBalance] = useState({\n    USD: 1250.75,\n    EUR: 980.30,\n    MM: 512.45\n  });\n  \n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n  const [transactions, setTransactions] = useState(sampleTransactions);\n  const [pendingVerifications, setPendingVerifications] = useState(sampleVerifications);\n  const [user, setUser] = useState({\n    id: 'mm_8f92a6d1b4c7',\n    name: 'Alex Smith',\n    avatar: null,\n    verified: true\n  });\n\n  // Functions to update state\n  const addTransaction = (transaction) => {\n    const newTransaction = {\n      id: transactions.length + 100,\n      date: 'Just now',\n      status: 'pending',\n      ...transaction\n    };\n    \n    setTransactions([newTransaction, ...transactions]);\n    \n    // If it's a send transaction, update balance\n    if (transaction.type === 'send') {\n      setBalance({\n        ...balance,\n        [transaction.currency]: balance[transaction.currency] - transaction.amount\n      });\n    }\n    \n    // Simulate transaction completion after 2 seconds\n    setTimeout(() => {\n      setTransactions(current => \n        current.map(tx => \n          tx.id === newTransaction.id ? { ...tx, status: 'completed' } : tx\n        )\n      );\n    }, 2000);\n    \n    return newTransaction;\n  };\n  \n  const verifyTransaction = (verificationId) => {\n    // Remove from pending verifications\n    setPendingVerifications(current => \n      current.filter(v => v.id !== verificationId)\n    );\n    \n    // Add verification reward to MM balance\n    const verification = pendingVerifications.find(v => v.id === verificationId);\n    \n    if (verification) {\n      // Add to MM balance\n      setBalance({\n        ...balance,\n        MM: balance.MM + verification.reward\n      });\n      \n      // Add to transaction history\n      addTransaction({\n        type: 'verify',\n        amount: verification.reward,\n        currency: 'MM',\n        description: 'Verification reward'\n      });\n    }\n  };\n\n  // Value object\n  const value = {\n    balance,\n    selectedCurrency,\n    setSelectedCurrency,\n    transactions,\n    pendingVerifications,\n    user,\n    addTransaction,\n    verifyTransaction\n  };\n\n  // Return provider\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\n// Custom hook for using the context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}